name: Custom Release Workflow

on:
  repository_dispatch:
    types:
      - trigger-release-in-b # This should match the event_type you used in the trigger step

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
          token: ${{ secrets._GITHUB_TOKEN }}

    - name: Git pull
      run: git pull --prune

    - name: Fetch all tags
      run: git fetch --tags

    - name: Get the latest tag
      id: latest_tag
      run: |
        latest_tag=$(git tag -l 'prod[0-9][0-9][0-9][0-9][0-1][0-9][0-3][0-9].*' | sort -t '.' -k 1,1 -k 2,2n | tail -n 1)
        echo "::set-output name=latest_tag::$latest_tag"
      shell: bash
      
    - name: Determine the next version number
      id: determine_version
      run: |
        current_date=$(date +'%Y%m%d')
        
        # Get the latest tag
        latest_tag=$(git tag -l 'prod[0-9][0-9][0-9][0-9][0-1][0-9][0-3][0-9].*' | sort -t '.' -k 1,1 -k 2,2n | tail -n 1)
        
        if [ -n "$latest_tag" ]; then
          # Extract the date and version parts
          latest_date=$(echo $latest_tag | sed 's/^prod\([0-9]\{8\}\)\..*/\1/')
          latest_version=$(echo $latest_tag | sed 's/^prod[0-9]\{8\}\.\([0-9]\+\)/\1/')
          
          if [ "$latest_date" = "$current_date" ]; then
            next_version=$((latest_version + 1))
            next_tag="prod$current_date.$next_version"
          elif [ "$latest_date" -lt "$current_date" ]; then
            next_tag="prod$current_date.0"
          else
            echo "Invalid date condition."
            exit 1
          fi
        else
          next_tag="prod$current_date.0"
        fi
        
        echo "Creating new tag $next_tag."
        echo "$next_tag" >> tag.txt
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
      
    - name: Read release tag
      id: read_tag
      run: echo "::set-output name=tag::$(cat tag.txt)"
      shell: bash

    - name: Create and push release tag
      run: |
        git tag ${{ steps.read_tag.outputs.tag }}
        git push --tags
      if: steps.read_tag.outputs.tag != ''
      env:
        GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ''
        tag_name: ${{ steps.read_tag.outputs.tag }}
        title: Release ${{ steps.read_tag.outputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
